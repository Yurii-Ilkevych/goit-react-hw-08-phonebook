{"version":3,"file":"static/js/368.2a3a4463.chunk.js","mappings":"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","sources":["components/App.styled.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactList/ContactList.styled.js","components/DeleteBtn/DeleteBtn.styled.js","components/DeleteBtn/DeleteBtn.js","components/ListItem/ListItem.styled.js","components/ListItem/ListItem.js","redux/filter/filterSelectors.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["import styled from \"@emotion/styled\"\n\nconst Wrapper = styled.div`\nmargin-top: 50px;\ntext-align: center;\n\n`\n\nconst PrimaryTittle = styled.h1`\nfont-weight: 800;\nmargin-bottom: 15px;\n`\n\nconst SecondTittle = styled.h2`\nfont-weight: 500;\nmargin-bottom: 15px;\n`\n\nexport {Wrapper, PrimaryTittle, SecondTittle}","export const selectContacts = state => state.contacts.contactsItem;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import styled from '@emotion/styled';\n\nconst Form = styled.form`\n  width: 400px;\n  border: 1px solid black;\n  border-radius: 10px;\n  margin: auto;\n  margin-bottom: 15px;\n  background-color: rgb(247, 237, 224);\n`;\n\nconst Name = styled.input`\n  background-color: rgb(224, 251, 250);\n  margin-left: auto;\n  display: block;\n  margin-top: 10px;\n  border: 1px solid rgb(74, 72, 71);\n  border-radius: 4px;\n`;\nconst Number = styled.input`\n  background-color: rgb(224, 251, 250);\n  margin-left: auto;\n  display: block;\n  margin-top: 10px;\n  border: 1px solid rgb(74, 72, 71);\n  border-radius: 4px;\n`;\nconst Submit = styled.button`\n  background-color: rgb(224, 251, 250);\n  margin-bottom: 8px;\n  border: 1px solid rgb(74, 72, 71);\n  border-radius: 4px;\n  box-shadow: 0 1px #666;\n  &:hover {\n    background-color: rgb(69, 201, 219);\n  }\n  &:active {\n    background-color: rgb(224, 251, 250);\n    box-shadow: none;\n    transform: translateY(1px);\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 15px;\n  text-align: start;\n  padding: 8px;\n`;\nexport { Form, Name, Number, Submit, Wrapper };\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { Form, Name, Number, Submit, Wrapper } from './ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperators';\nimport toast from 'react-hot-toast';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const addedContacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const hundleSubmit = evt => {\n    evt.preventDefault();\n\n    const contact = {\n      name,\n      number,\n    };\n\n    const isContact = isAddedContact(contact);\n    if (isContact) {\n      return;\n    } else {\n      dispatch(addContact(contact));\n      resetValue();\n    }\n  };\n\n  const isAddedContact = contact => {\n    const notifyError = () =>\n      toast.error(`${contact.name} \"is already in exists\"`);\n    if (addedContacts.length !== 0) {\n      for (const addcontact of addedContacts) {\n        if (addcontact.name.includes(contact.name)) {\n          notifyError();\n          // alert(`${contact.name} \"is already in contacts\"`);\n          return true;\n        } else {\n          return false;\n        }\n      }\n    } else {\n      return false;\n    }\n  };\n\n  const handleValue = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetValue = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={hundleSubmit}>\n        <Wrapper>\n          <label>\n            Name\n            <Name\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              value={name}\n              onChange={handleValue}\n            />\n          </label>\n          <label>\n            Number\n            <Number\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              value={number}\n              onChange={handleValue}\n            />\n          </label>\n        </Wrapper>\n        <Submit type=\"submit\">Add contact</Submit>\n      </Form>\n    </>\n  );\n}\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 15px;\n`;\nconst Search = styled.input`\n  display: block;\n  margin-top: 8px;\n  margin-right: auto;\n  margin-left: auto;\n  border: 1px solid rgb(74, 72, 71);\n  background-color: rgb(224, 251, 250);\n  border-radius: 4px;\n`;\nexport { Wrapper, Search };\n","import { useState } from 'react';\nimport { Wrapper, Search } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { searchContact } from '../../redux/filter/filterSlice';\n\nconst Filter = () => {\n  const [value, setValue] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleValue = evt => {\n    const { value } = evt.currentTarget;\n    setValue(value);\n\n    dispatch(searchContact(value.toString()));\n  };\n\n  return (\n    <Wrapper>\n      <label>\n        Find contacts by name\n        <Search\n          name=\"text\"\n          type=\"text\"\n          value={value}\n          onChange={handleValue}\n        ></Search>\n      </label>\n    </Wrapper>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nconst Wrapper = styled.div`\n  width: 392px;\n  border: 1px solid black;\n  border-radius: 10px;\n  flex-wrap: wrap;\n  margin: auto;\n  margin-bottom: 15px;\n  background-color: rgb(232, 246, 247);\n  padding: 8px;\n`;\nconst List = styled.ul`\n  list-style: none;\n`;\n\nexport { Wrapper, List };\n","import styled from '@emotion/styled';\n\nconst Delete = styled.button`\n  background-color: rgb(247, 237, 224);\n  border: 1px solid rgb(74, 72, 71);\n  border-radius: 4px;\n  box-shadow: 0 1px #666;\n  &:hover {\n    background-color: rgb(245, 198, 137);\n  }\n  &:active {\n    background-color: rgb(247, 237, 224);\n    box-shadow: none;\n    transform: translateY(1px);\n  }\n`;\n\nexport { Delete };\n","import { ThreeDots } from 'react-loader-spinner';\nimport { Delete } from './DeleteBtn.styled';\nimport PropTypes from 'prop-types';\n\nexport const DeleteBtn = ({ id, isLoading, onDelete }) => {\n  return (\n    <Delete\n      type=\"button\"\n      disabled={isLoading}\n      onClick={() => {\n        onDelete(id);\n      }}\n    >\n      {isLoading ? (\n        <ThreeDots\n          height=\"15\"\n          width=\"40\"\n          radius=\"9\"\n          color=\"rgb(69, 201, 219)\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      ) : (\n        'Delete'\n      )}\n    </Delete>\n  );\n};\n\nDeleteBtn.propTypes = {\n  id: PropTypes.string.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst WrapperItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`;\nconst Item = styled.li`\n  font-family: standart;\n  font-weight: 500;\n`;\n\nexport { WrapperItem, Item };\n","import { DeleteBtn } from 'components/DeleteBtn/DeleteBtn';\nimport { deleteContact } from 'redux/contacts/contactsOperators';\nimport { Item, WrapperItem } from './ListItem.styled';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport React from 'react';\nimport { string } from 'prop-types';\n\nconst ListItem = ({ id, name, number }) => {\n  const [isLoading, setIsLoading] = useState({ [id]: false });\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => {\n    setIsLoading(prevState => ({\n      ...prevState,\n      [id]: true,\n    }));\n\n    dispatch(deleteContact(id))\n      .then(() => {\n        setIsLoading(prevState => ({\n          ...prevState,\n          [id]: false,\n        }));\n      })\n      .catch(() => {\n        setIsLoading(prevState => ({\n          ...prevState,\n          [id]: false,\n        }));\n      });\n  };\n  return (\n    <WrapperItem>\n      <Item>\n        {name}: {number}\n      </Item>\n      <DeleteBtn\n        id={id}\n        isLoading={isLoading[id]}\n        onDelete={handleDeleteContact}\n      />\n    </WrapperItem>\n  );\n};\n\nexport { ListItem };\n\nListItem.propTypes = {\n  id: string.isRequired,\n  name: string.isRequired,\n  number: string.isRequired,\n};\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filterValue) => {\n    if (filterValue === '') {\n      return contacts;\n    } else {\n      const normalizeFilter = filterValue.toLowerCase();\n      const filterContact = contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizeFilter)\n      );\n\n      return filterContact;\n    }\n  }\n);\n","import { Wrapper, List } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from 'redux/contacts/contactsSelectors';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { ListItem } from 'components/ListItem/ListItem';\nimport { selectVisibleContacts } from 'redux/filter/filterSelectors';\nimport { fetchContacts } from 'redux/contacts/contactsOperators';\nimport { useEffect } from 'react';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const visibleContacts = useSelector(selectVisibleContacts);\n  return (\n    <div>\n      {isLoading && (\n        <>\n          <p>Loading contacts</p>\n          <ThreeDots\n            height=\"20\"\n            width=\"30\"\n            radius=\"9\"\n            color=\"rgb(69, 201, 219)\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{ justifyContent: 'center' }}\n            wrapperClassName=\"\"\n            visible={true}\n          />{' '}\n        </>\n      )}\n      {error && <p>{error}</p>}\n      {contacts.length > 0 && (\n        <Wrapper>\n          <List>\n            {visibleContacts.map(item => (\n              <ListItem key={item.id} {...item} />\n            ))}\n          </List>\n        </Wrapper>\n      )}\n    </div>\n  );\n};\nexport default ContactList;\n","import { PrimaryTittle, SecondTittle, Wrapper } from 'components/App.styled';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\n\nconst Contacts = () => {\n  return (\n    <Wrapper>\n      <PrimaryTittle>Phonebook</PrimaryTittle>\n      <ContactForm />\n\n      <SecondTittle>Contacts</SecondTittle>\n      <Filter />\n      <ContactList />\n    </Wrapper>\n  );\n};\n\nexport default Contacts;\n"],"names":["Wrapper","styled","PrimaryTittle","SecondTittle","selectContacts","state","contacts","contactsItem","selectIsLoading","isLoading","selectError","error","Form","Name","Number","Submit","useState","name","setName","number","setNumber","addedContacts","useSelector","dispatch","useDispatch","isAddedContact","contact","length","includes","toast","handleValue","evt","currentTarget","value","resetValue","onSubmit","preventDefault","addContact","type","pattern","title","required","onChange","Search","setValue","searchContact","toString","List","Delete","DeleteBtn","id","onDelete","disabled","onClick","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","WrapperItem","Item","ListItem","setIsLoading","prevState","deleteContact","then","catch","selectVisibleContacts","createSelector","filter","filterValue","normalizeFilter","toLowerCase","useEffect","fetchContacts","visibleContacts","justifyContent","map","item"],"sourceRoot":""}