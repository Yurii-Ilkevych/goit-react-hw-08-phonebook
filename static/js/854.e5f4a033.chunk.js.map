{"version":3,"file":"static/js/854.e5f4a033.chunk.js","mappings":"2QAEMA,EAAOC,EAAAA,EAAAA,KAAH,qNAWJC,EAAcD,EAAAA,EAAAA,OAAH,mYAkBXE,EAASF,EAAAA,EAAAA,GAAH,4FAMNG,EAAgBH,EAAAA,EAAAA,IAAH,wGAObI,EAAgBJ,EAAAA,EAAAA,MAAH,oJAObK,EAAYL,EAAAA,EAAAA,MAAH,oJAMTM,EAAaN,EAAAA,EAAAA,MAAH,oJ,6BC+DhB,EArGqB,WACnB,OAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAUF,EAAAA,EAAAA,IAAYG,EAAAA,KAE5BC,EAAAA,EAAAA,YAAU,WAEM,OAAVL,GADsBM,EAAAA,GAAAA,MAAA,UAAeN,GAI1C,GAAE,CAACA,IAEJ,IAAMO,EAAc,SAAAC,GAClB,MAAwBA,EAAIC,cAApBjB,EAAR,EAAQA,KAAMkB,EAAd,EAAcA,MACd,OAAQlB,GACN,IAAK,OACHC,EAAQiB,EAAMC,QACd,MACF,IAAK,QACHhB,EAASe,EAAMC,QACf,MACF,IAAK,WACHd,EAAYa,EAAMC,QAClB,MACF,QACE,OAEL,EAOKC,EAAY,WAChBnB,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EACD,OACE,8BACGM,GACC,SAAC,KAAD,CACEU,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,oBACNC,UAAU,qBACVC,aAAc,CAAEC,eAAgB,SAAUC,UAAW,SACrDC,iBAAiB,GACjBC,SAAS,KAGX,UAACvC,EAAD,CAAMwC,SAxBS,SAAAf,GACnBA,EAAIgB,iBACJ1B,GAAS2B,EAAAA,EAAAA,IAAW,CAAEjC,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACnCgB,GACD,EAoBK,WACE,SAAC1B,EAAD,UAAQ,uCACR,UAACC,EAAD,YACE,6BAAO,QAEL,SAACE,EAAD,CACEqC,KAAK,OACLlC,KAAK,OACLmC,UAAQ,EACRjB,MAAOlB,EACPoC,SAAUrB,QAGd,6BAAO,SAEL,SAACjB,EAAD,CACEoC,KAAK,QACLlC,KAAK,QACLqC,QAAQ,QACRC,MAAM,qCACNpB,MAAOhB,EACPiC,UAAQ,EACRC,SAAUrB,QAGd,6BAAO,YAEL,SAACnB,EAAD,CACEsC,KAAK,WACLlC,KAAK,WACLkB,MAAOd,EACPiC,QAAQ,YACRC,MAAM,4CACNH,UAAQ,EACRC,SAAUrB,WAIhB,SAACtB,EAAD,CAAayC,KAAK,SAAlB,SAA2B,eAKpC,EC5GD,EARiB,WACf,OACE,0BACE,SAAC,EAAD,KAGL,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst Form = styled.form`\n  width: 400px;\n  border: 1px solid black;\n  border-radius: 10px;\n  margin: auto;\n  margin-bottom: 15px;\n  background-color: rgb(232, 246, 247);\n  margin-top: 50px;\n  padding: 8px;\n`;\n\nconst RegisterBtn = styled.button`\n  display: block;\n  margin: auto;\n  background-color: rgb(247, 237, 224);\n  border: 1px solid rgb(74, 72, 71);\n  border-radius: 4px;\n  box-shadow: 0 1px #666;\n  &:hover {\n    color: black;\n    background-color: rgb(245, 198, 137);\n  }\n  &:active {\n    background-color: rgb(245, 198, 137);\n    box-shadow: none;\n    transform: translateY(1px);\n  }\n`;\n\nconst Tittle = styled.h3`\n  font-weight: 600;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 24px;\n  margin-bottom: 10px;\n`;\n\nconst InputPassword = styled.input`\n  margin-left: 58px;\n  background-color: rgb(247, 237, 224);\n  border-radius: 4px;\n  border: 1px solid rgb(74, 72, 71);\n`;\n\nconst InputName = styled.input`\n  margin-left: 85px;\n  background-color: rgb(247, 237, 224);\n  border: 1px solid rgb(74, 72, 71);\n  border-radius: 4px;\n`;\nconst InputEmail = styled.input`\n  margin-left: 89px;\n  background-color: rgb(247, 237, 224);\n  border: 1px solid rgb(74, 72, 71);\n  border-radius: 4px;\n`;\n\nexport {\n  Form,\n  RegisterBtn,\n  Tittle,\n  FlexContainer,\n  InputEmail,\n  InputName,\n  InputPassword,\n};\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectErrorStatusRegister,\n  selectPending,\n} from 'redux/authUser/authSelectors';\nimport { createUser } from 'redux/authUser/authOperators';\nimport {\n  Form,\n  RegisterBtn,\n  Tittle,\n  FlexContainer,\n  InputEmail,\n  InputName,\n  InputPassword,\n} from './RegisterForm.styled';\nimport { ThreeDots } from 'react-loader-spinner';\nimport toast from 'react-hot-toast';\n\nconst RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const error = useSelector(selectErrorStatusRegister);\n  const pending = useSelector(selectPending);\n\n  useEffect(() => {\n    const notifyError = () => toast.error(`${error}`);\n    if (error !== null) {\n      notifyError();\n    }\n  }, [error]);\n\n  const handleValue = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value.trim());\n        break;\n      case 'email':\n        setEmail(value.trim());\n        break;\n      case 'password':\n        setPassword(value.trim());\n        break;\n      default:\n        return;\n    }\n  };\n\n  const hundleSubmit = evt => {\n    evt.preventDefault();\n    dispatch(createUser({ name, email, password }));\n    resetForm();\n  };\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <>\n      {pending ? (\n        <ThreeDots\n          height=\"60\"\n          width=\"70\"\n          radius=\"9\"\n          color=\"rgb(69, 201, 219)\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{ justifyContent: 'center', marginTop: '100px' }}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      ) : (\n        <Form onSubmit={hundleSubmit}>\n          <Tittle>Enter data to register a new user</Tittle>\n          <FlexContainer>\n            <label>\n              Name\n              <InputName\n                type=\"text\"\n                name=\"name\"\n                required\n                value={name}\n                onChange={handleValue}\n              ></InputName>\n            </label>\n            <label>\n              Email\n              <InputEmail\n                type=\"email\"\n                name=\"email\"\n                pattern=\".+@.+\"\n                title=\"Please enter a valid email address\"\n                value={email}\n                required\n                onChange={handleValue}\n              ></InputEmail>\n            </label>\n            <label>\n              Password\n              <InputPassword\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                pattern=\"^.{7,12}$\"\n                title=\"The password must contain 7-12 characters\"\n                required\n                onChange={handleValue}\n              ></InputPassword>\n            </label>\n          </FlexContainer>\n          <RegisterBtn type=\"submit\">Submit</RegisterBtn>\n        </Form>\n      )}\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["Form","styled","RegisterBtn","Tittle","FlexContainer","InputPassword","InputName","InputEmail","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","error","useSelector","selectErrorStatusRegister","pending","selectPending","useEffect","toast","handleValue","evt","currentTarget","value","trim","resetForm","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","marginTop","wrapperClassName","visible","onSubmit","preventDefault","createUser","type","required","onChange","pattern","title"],"sourceRoot":""}